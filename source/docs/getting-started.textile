---
layout: default
title: Getting started
name: docs
---

h2. Install

h3. Using Composer

The recommended way to install PHP-Textile is via "Composer":https://getcomposer.org/ package manager. Navigate to your project directory, and run the command:

bc(language-sh). $ composer require "netcarver/textile {{ site.php_textile_version_minor }}.*"

h3. Manual

You can also ==<a href="{{ site.github_url }}/archive/v{{ site.php_textile_version_latest }}.zip"><i class="fa fa-cloud-download"></i> download PHP-Textile as a ZIP archive</a>==, extract it and place the included @src@ directory somewhere to your project tree.

bc(language-sh). $ curl -L "{{ site.github_url }}/archive/v{{ site.php_textile_version_latest }}.tar.gz" | tar -zx

h2(#autoload). Include PHP-Textile in your project

h3. Composer

If you haven't yet set up Composer for your project, you will want to include Composer's "autoloader file":http://getcomposer.org/doc/01-basic-usage.md#autoloading in your project bootstrap:

bc(language-php). require './vendor/autoload.php';

By default, the autoloader file is generated to the vendor directory, placed to the directory where you ran the @composer require@ command. PHP-Textile registers a "PSR-0 autoloader":https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md, and including the autoloader file allows you to access PHP-Textile library anywhere in your project.

h3. Manual

PHP-Textile supports any "PSR-0 style autoloaders":https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md, but you can also include the source files in your project manually:

bc(language-php). require 'path/to/src/Netcarver/Textile/Parser.php';
require 'path/to/src/Netcarver/Textile/DataBag.php';
require 'path/to/src/Netcarver/Textile/Tag.php';

Or point your PSR-0 autoloader to your PHP-Textile installation location. For instance using "Symfony ClassLoader Component":http://symfony.com/doc/2.0/components/class_loader.html:

bc(language-php).. require '/path/to/src/Symfony/Component/ClassLoader/UniversalClassLoader.php';
use Symfony\Component\ClassLoader\UniversalClassLoader;

$loader = new UniversalClassLoader();
$loader->registerNamespace('Netcarver\Textile', 'path/to/src/');
$loader->register();

h2. Usage

PHP-Textile parser can be accessed through the "Netcarver\Textile\Parser":/docs/api/netcarver/textile/parser/ class. The class is highly configurable, and actual parsing happens with the "textileThis":/docs/api/netcarver/textile/parser/textilethis/ and "textileRestricted":/docs/api/netcarver/textile/parser/textilerestricted/ methods. Check out the "documentation":/docs/ for more information about the library. Basic parsing would be done like so:

bc(language-php). $parser = new \Netcarver\Textile\Parser();
echo $parser->textileThis('h1. Hello World!');

If you are using PHP-Textile to format untrusted user-supplied input, blog comments for instance, use the "textileRestricted":/docs/api/netcarver/textile/parser/textilerestricted/ method instead:

bc(language-php). $parser = new \Netcarver\Textile\Parser();
echo $parser->textileRestricted('!bad/image/not/allowed.svg!');

The method doesn't allow more powerful formatting options such as inline style, and removes any raw HTML.
